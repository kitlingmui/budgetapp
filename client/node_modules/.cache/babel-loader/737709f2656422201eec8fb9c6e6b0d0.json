{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\budgetapp\\\\src\\\\components\\\\Navbar\\\\navbarComponents\\\\LeftDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MailIcon from '@material-ui/icons/Mail';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport ProfileAvatar from './Avatar';\nvar styles = {\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  toolbar: {\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n};\n\nvar SwipeableTemporaryDrawer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SwipeableTemporaryDrawer, _React$Component);\n\n  function SwipeableTemporaryDrawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SwipeableTemporaryDrawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SwipeableTemporaryDrawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      left: false\n    };\n\n    _this.toggleDrawer = function (side, open) {\n      return function () {\n        _this.setState(_defineProperty({}, side, open));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(SwipeableTemporaryDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var sideList = React.createElement(\"div\", {\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        className: classes.grow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Overview\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, ['Calendar', 'Transaction', 'Chart', 'Categories', 'Budgets'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, index === 0 ? React.createElement(CalendarTodayIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }) : index === 1 ? React.createElement(PaymentIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }) : index === 2 ? React.createElement(PieChartIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }) : index === 3 ? React.createElement(CategoryIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }) : React.createElement(AttachMoneyIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      })));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"fixed\",\n        color: \"primary\",\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.toggleDrawer('left', true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"PiggyBank\"), React.createElement(ProfileAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(SwipeableDrawer, {\n        open: this.state.left,\n        onClose: this.toggleDrawer('left', false),\n        onOpen: this.toggleDrawer('left', true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        tabIndex: 0,\n        role: \"button\",\n        x: true,\n        onKeyDown: this.toggleDrawer('left', false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, sideList)));\n    }\n  }]);\n\n  return SwipeableTemporaryDrawer;\n}(React.Component);\n\nSwipeableTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SwipeableTemporaryDrawer);","map":{"version":3,"sources":["C:\\Users\\taylo\\Desktop\\budgetapp\\src\\components\\Navbar\\navbarComponents\\LeftDrawer.js"],"names":["React","PropTypes","withStyles","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","CalendarTodayIcon","PaymentIcon","PieChartIcon","CategoryIcon","AttachMoneyIcon","MailIcon","AppBar","Toolbar","IconButton","MenuIcon","Typography","Avatar","ProfileAvatar","styles","list","width","fullList","toolbar","alignItems","justifyContent","SwipeableTemporaryDrawer","state","left","toggleDrawer","side","open","setState","classes","props","sideList","grow","map","text","index","appBar","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';    \r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'; \r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ProfileAvatar from './Avatar'\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n};\r\n\r\n\r\n\r\nclass SwipeableTemporaryDrawer extends React.Component {\r\n  state = {\r\n    left: false\r\n  };\r\n  \r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n        {/* <Avatar alt=\"Remy Sharp\" src=\"./images/piggy.jpg\"/> */}\r\n          \r\n        </List>\r\n        <Divider /> \r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          Overview\r\n          </Typography>\r\n        <List>\r\n        {['Calendar', 'Transaction', 'Chart', 'Categories','Budgets'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index  === 0 ? <CalendarTodayIcon /> : index  === 1 ? <PaymentIcon /> : \r\n              index === 2 ? <PieChartIcon /> : index === 3 ?<CategoryIcon /> : <AttachMoneyIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            \r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n \r\n\r\n    return (\r\n      <div>\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>      \r\n          <Button onClick={this.toggleDrawer('left', true)}><MenuIcon /></Button>  \r\n          <Typography>\r\n          PiggyBank\r\n          </Typography>\r\n          <ProfileAvatar/>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <SwipeableDrawer\r\n        \r\n          open={this.state.left}\r\n          onClose={this.toggleDrawer('left', false)}\r\n          onOpen={this.toggleDrawer('left', true)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          x\r\n            onKeyDown={this.toggleDrawer('left', false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n          \r\n        </SwipeableDrawer>  \r\n         \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SwipeableTemporaryDrawer);"]},"metadata":{},"sourceType":"module"}